##Author: Daniel-Adriano Silva
##Date:   16/Dec/2018
##Cite:   Daniel-Adriano Silva*, Shawn Yu*, Umut Y. Ulge*, Jamie B. Spangler, et. al., 
##Cite:     De novo design of potent and selective mimics of IL-2 and IL-15, 
##Cite:     Nature, 2018. https://doi.org/10.1038/s41586-018-0830-7
##Info:   A quick mostly-self-contained example on how to execute the:
##Info:     "De Novo Protein Mimic Designer, by D.A.S." 
##Info:     exemplified by using HsIL-2 interacting with its bg-receptor. 
##Info:     The final outputs are computationaly designed (candidates) de novo mimics of IL-2


##################################################################
#########FINAL FILE TREE##########################################
##################################################################
# .
# ├── 00_inPDBs/                       #Contains the example input PDB structures
# ├── 01_results_scaffoldsMimicsIL2/   #Will contain the results of the "mimics" algorithm (after executing the code)
# │   └── debug/                         #(optional) Intermediate steps of the algorithm are written here (for debug)
# ├── 02_design_sequenceOnMimicsIL2/   #Will contain the results of Rosetta-sequence design the mimics' scaffolds (after executing rosettaScripts)
# │   └── ...                            #Each folder contains the setup for a unique input pdb-scaffold, and the results of sequence design for it
# ├── BASH                             #Contains the script to generate the sequence design setup form the results of the mimic-scaffold design
# ├── dbClusteredFragments_7aa/        #Database of clustered idealized fragments used by the mimics design protocol
# ├── HOWTO                            #This file
# ├── python/                          #Contains the python implementation of the "De Novo Protein Mimic Designer" algorithm
# └── XMLrosettaScripts/               #Contains the rosettaScripts script for sequence design

##################################################################
############### END ##############################################
##################################################################


##################################################################
###############START##############################################
##################################################################

#####
### Step 1. Execute the mimic-scafold design algorithm (~24 hours run)
#####
#1> mkdir ./01_results_scaffoldsMimicsIL2 
#2> python2.7 python/protein_mimic_designer_r2_00b.py -in_pdb_name 00_inPDBs/2b5i_IL2only_renum.pdb -in_global_context_path 00_inPDBs/2b5i_rBGonly_renum.pdb -out_file_dir ./01_results_scaffoldsMimicsIL2 -target_reduc_size_Nterminus 8 -target_reduc_size_Cterminus 8 -target_extra_size_Nterminus 8 -target_extra_size_Cterminus 8

#####
### Step 2. Use the fully profiled-hotspot containing results (generated in the previous step) as inputs for rosetta-scripts to design sequences that favor the scaffold(s):
#####
##First generate the setup, including resfiles for each mimetic backbone result
#3> bash BASH/00_generateRosettaScriptsInputWithResfiles.bash 01_results_scaffoldsMimicsIL2 02_design_sequenceOnMimicsIL2
##Then run all the designs, a list with commands is generated by the previous script, so you can use parallel (or similar). e.g.; each design  might take ~ 1-4 hours (or more):
#4> parallel -j 20 --no-notice --bar < 02_design_sequenceOnMimicsIL2/designs.tasklist

#####
### Step 3. Filter: Sort the results by score/res, ddG, ssPred, packstat... -> Select and Experimentally-test
#####

##################################################################
############### END ##############################################
##################################################################
